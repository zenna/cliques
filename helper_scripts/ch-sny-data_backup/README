Sets up nightly backup of directory via rsync over ssh.
Yun William Yu (yun.yu09@imperial.ac.uk)
2010-11-04 12.38

Script files installed in a new directory "cron" under your home directory on
the machine to be backed up. If you are already are using a directory by that
name, be sure to change the references in the install.sh file to reflect the
desired directory.

Backups will be stored on the server under the directory "backup" in your home
directory. "current" will be a full copy of the files, while "Monday", "Tuesday", ..., "Sunday" will contain incremental backups for the past week.

Requirements:
*	Modern *nix based system with rsync and ssh installed.
	Note: this has NOT been tested on MacOS, though the same general scheme
	should work.

Instructions:
1)	Edit the backup-script.sh to choose the directories to back up.

	The default is to back up your home directory, but you can select as
	many directories as you like, provided they have different names.

2)	Run "./install.sh", which will require you to input your college
	password several times.

	Note that while the script works for me, it has not been thoroughly
	tested; YMMV.

	If the script does fail, you'll have to manually set up public key ssh
	access to the server, to be stored in ~/.ssh/backup
	Ref: http://tuxtraining.com/2008/05/29/howto-backup-nightly-via-rsync

	Also, as mentioned earlier, you'll have to manually create the
	relevant directories on both the server and your computer.

3)	Near the end of the script, it will inform you of a line that needs
	to be added to your crontab. Copy this line, hit enter, and then paste
	it in when the crontab editing window appears (using whatever your
	system default text editor is).

	It might be useful if not everyone specifies exactly 3am, so that the
	server doesn't get overloaded. The first "0" of the suggested line can
	be changed to reflect the minute and the "3" the hour.

	This step will have to be done manually if the install script does not
	function properly.

4)	Depending on your system configuration, you may have to logout before
	ssh-agent properly caches the new public key.

5)	(Optional) While this should set up an automatic nightly backup, you may
	want to force a backup immediately, as the initial synchronization will
	take significantly longer. Do this by running ~/cron/backup-script.sh

6)	(Optional) By default, an excludes file is created under the cron folder
	to disable backing up ~/homedir, which is the college network drive. You
	may add additional paths to this file to exclude subfolders from being
	backed up.

7)	Enjoy working in the knowledge that your data is (reasonably) safe!
